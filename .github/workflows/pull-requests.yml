name: PR Checks

on:
  pull_request:
    branches: [ master ]

jobs:

  validations:
    name: Run project validations
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # Pull tags because of sbt-dynver.
          # See https://github.com/actions/checkout#Fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0
      - uses: actions/cache@v2
        env:
          cache-name: lagom-dependencies-cache-
        with:
          path: |
            - $HOME/.cache/coursier
            - $HOME/.ivy2/cache
            - $HOME/.sbt
            - $HOME/.m2/repositories
          key: lagom-dependencies-cache-${{ hashFiles('**/*.sbt') }}
          restore-keys: lagom-dependencies-cache-
      - name: Set up JDK 8
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8.0-275
      - name: Debug env
        run: env
      - name: Code validations (format, binary compatibilty, whitesource, etc.)
        run:  bin/test-code-style

  run-tests:
    name: Tests / Scala ${{ matrix.SCALA_VERSION }} / Java ${{ matrix.JDK }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - JDK: 8
            SCALA_VERSION: "2.13.5"
          - JDK: 11
            SCALA_VERSION: "2.12.13"
          - JDK: 11
            SCALA_VERSION: "2.13.5"
    steps:
      - uses: actions/checkout@v2
        with:
          # Pull tags because of sbt-dynver.
          # See https://github.com/actions/checkout#Fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0
      - uses: actions/cache@v2
        env:
          cache-name: lagom-dependencies-cache-
        with:
          path: |
            - $HOME/.cache/coursier
            - $HOME/.ivy2/cache
            - $HOME/.sbt
            - $HOME/.m2/repositories
          key: lagom-dependencies-cache-${{ hashFiles('**/*.sbt') }}
          restore-keys: lagom-dependencies-cache-
      ## JDK 8 must always be installed.
      - name: Set up JDK 8
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8.0-275
      ## When we want to use JDK 11, then we install it last so it's the one used
      - name: Set up JDK 11
        if: ${{ matrix.JDK == 11 }}
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11.0-9
      - name: Run tests
        run: SCALA_VERSION=${{ matrix.SCALA_VERSION }} bin/test-2.1x
      - name: Run multi-jvm tests
        run: SCALA_VERSION=${{ matrix.SCALA_VERSION }} bin/test-multi-jvm-2.1x

  run-documentation-tests:
    name: Docs / Tests / Java ${{ matrix.JDK }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - JDK: 11
          - JDK: 8
    steps:
      - uses: actions/checkout@v2
        with:
          # Pull tags because of sbt-dynver.
          # See https://github.com/actions/checkout#Fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0
      ## JDK 8 must always be installed.
      - name: Set up JDK 8
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8.0-275
      ## When we want to use JDK 11, then we install it last so it's the one used
      - name: Set up JDK 11
        if: ${{ matrix.JDK == 11 }}
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11.0-9
      - name: "Documentation validations and tests"
        run: bin/test-documentation

  run-build-tools-tests:
    name: Build Tools / Tests / ${{ matrix.JDK }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - JDK: 11
          - JDK: 8
    steps:
      - uses: actions/checkout@v2
        with:
          # Pull tags because of sbt-dynver.
          # See https://github.com/actions/checkout#Fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0
      ## JDK 8 must always be installed.
      - name: Set up JDK 8
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8.0-275
      ## When we want to use JDK 11, then we install it last so it's the one used
      - name: Set up JDK 11
        if: ${{ matrix.JDK == 11 }}
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11.0-9
      - name: "Scripted tests for sbt 1"
        run: SCALA_VERSION=2.12.13 bin/test-sbt
      - name: "PublishM2 and test Maven"
        run: bin/test-maven

