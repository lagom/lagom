/*
 * Copyright (C) 2016-2019 Lightbend Inc. <https://www.lightbend.com>
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProjectionMessages.proto

package com.lightbend.lagom.internal.projection.protobuf.msg;

public final class ProjectionMessages {
  private ProjectionMessages() {}

  public static void registerAllExtensions(akka.protobuf.ExtensionRegistry registry) {}

  public interface WorkerOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:com.lightbend.lagom.internal.projection.Worker)
      akka.protobuf.MessageOrBuilder {

    /** <code>required string tagName = 1;</code> */
    boolean hasTagName();
    /** <code>required string tagName = 1;</code> */
    java.lang.String getTagName();
    /** <code>required string tagName = 1;</code> */
    akka.protobuf.ByteString getTagNameBytes();

    /** <code>required string key = 2;</code> */
    boolean hasKey();
    /** <code>required string key = 2;</code> */
    java.lang.String getKey();
    /** <code>required string key = 2;</code> */
    akka.protobuf.ByteString getKeyBytes();

    /** <code>required string requestedStatus = 3;</code> */
    boolean hasRequestedStatus();
    /** <code>required string requestedStatus = 3;</code> */
    java.lang.String getRequestedStatus();
    /** <code>required string requestedStatus = 3;</code> */
    akka.protobuf.ByteString getRequestedStatusBytes();

    /** <code>required string observedStatus = 4;</code> */
    boolean hasObservedStatus();
    /** <code>required string observedStatus = 4;</code> */
    java.lang.String getObservedStatus();
    /** <code>required string observedStatus = 4;</code> */
    akka.protobuf.ByteString getObservedStatusBytes();
  }
  /** Protobuf type {@code com.lightbend.lagom.internal.projection.Worker} */
  public static final class Worker extends akka.protobuf.GeneratedMessage
      implements
      // @@protoc_insertion_point(message_implements:com.lightbend.lagom.internal.projection.Worker)
      WorkerOrBuilder {
    // Use Worker.newBuilder() to construct.
    private Worker(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private Worker(boolean noInit) {
      this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private static final Worker defaultInstance;

    public static Worker getDefaultInstance() {
      return defaultInstance;
    }

    public Worker getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;

    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Worker(
        akka.protobuf.CodedInputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownField(
                    input, unknownFields,
                    extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                tagName_ = bs;
                break;
              }
            case 18:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                key_ = bs;
                break;
              }
            case 26:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                requestedStatus_ = bs;
                break;
              }
            case 34:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                observedStatus_ = bs;
                break;
              }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(e.getMessage())
            .setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_Worker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.class,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
                  .class);
    }

    public static akka.protobuf.Parser<Worker> PARSER =
        new akka.protobuf.AbstractParser<Worker>() {
          public Worker parsePartialFrom(
              akka.protobuf.CodedInputStream input,
              akka.protobuf.ExtensionRegistryLite extensionRegistry)
              throws akka.protobuf.InvalidProtocolBufferException {
            return new Worker(input, extensionRegistry);
          }
        };

    @java.lang.Override
    public akka.protobuf.Parser<Worker> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TAGNAME_FIELD_NUMBER = 1;
    private java.lang.Object tagName_;
    /** <code>required string tagName = 1;</code> */
    public boolean hasTagName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /** <code>required string tagName = 1;</code> */
    public java.lang.String getTagName() {
      java.lang.Object ref = tagName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tagName_ = s;
        }
        return s;
      }
    }
    /** <code>required string tagName = 1;</code> */
    public akka.protobuf.ByteString getTagNameBytes() {
      java.lang.Object ref = tagName_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tagName_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.Object key_;
    /** <code>required string key = 2;</code> */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /** <code>required string key = 2;</code> */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /** <code>required string key = 2;</code> */
    public akka.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    public static final int REQUESTEDSTATUS_FIELD_NUMBER = 3;
    private java.lang.Object requestedStatus_;
    /** <code>required string requestedStatus = 3;</code> */
    public boolean hasRequestedStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /** <code>required string requestedStatus = 3;</code> */
    public java.lang.String getRequestedStatus() {
      java.lang.Object ref = requestedStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          requestedStatus_ = s;
        }
        return s;
      }
    }
    /** <code>required string requestedStatus = 3;</code> */
    public akka.protobuf.ByteString getRequestedStatusBytes() {
      java.lang.Object ref = requestedStatus_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        requestedStatus_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    public static final int OBSERVEDSTATUS_FIELD_NUMBER = 4;
    private java.lang.Object observedStatus_;
    /** <code>required string observedStatus = 4;</code> */
    public boolean hasObservedStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /** <code>required string observedStatus = 4;</code> */
    public java.lang.String getObservedStatus() {
      java.lang.Object ref = observedStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          observedStatus_ = s;
        }
        return s;
      }
    }
    /** <code>required string observedStatus = 4;</code> */
    public akka.protobuf.ByteString getObservedStatusBytes() {
      java.lang.Object ref = observedStatus_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        observedStatus_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      tagName_ = "";
      key_ = "";
      requestedStatus_ = "";
      observedStatus_ = "";
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTagName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestedStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObservedStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTagNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getRequestedStatusBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getObservedStatusBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(1, getTagNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(3, getRequestedStatusBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(4, getObservedStatusBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(akka.protobuf.ByteString data)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(
            akka.protobuf.ByteString data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(byte[] data) throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(byte[] data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseDelimitedFrom(
            java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(akka.protobuf.CodedInputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        parseFrom(
            akka.protobuf.CodedInputStream input,
            akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code com.lightbend.lagom.internal.projection.Worker} */
    public static final class Builder extends akka.protobuf.GeneratedMessage.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.lightbend.lagom.internal.projection.Worker)
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Worker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                    .class,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                    .Builder.class);
      }

      // Construct using
      // com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {}
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tagName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        requestedStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        observedStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
          getDefaultInstanceForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
            .getDefaultInstance();
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
          build() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
          buildPartial() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker result =
            new com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker(
                this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tagName_ = tagName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requestedStatus_ = requestedStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.observedStatus_ = observedStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other
            instanceof
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker) {
          return mergeFrom(
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker other) {
        if (other
            == com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                .getDefaultInstance()) return this;
        if (other.hasTagName()) {
          bitField0_ |= 0x00000001;
          tagName_ = other.tagName_;
          onChanged();
        }
        if (other.hasKey()) {
          bitField0_ |= 0x00000002;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasRequestedStatus()) {
          bitField0_ |= 0x00000004;
          requestedStatus_ = other.requestedStatus_;
          onChanged();
        }
        if (other.hasObservedStatus()) {
          bitField0_ |= 0x00000008;
          observedStatus_ = other.observedStatus_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTagName()) {

          return false;
        }
        if (!hasKey()) {

          return false;
        }
        if (!hasRequestedStatus()) {

          return false;
        }
        if (!hasObservedStatus()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker)
                  e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.lang.Object tagName_ = "";
      /** <code>required string tagName = 1;</code> */
      public boolean hasTagName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /** <code>required string tagName = 1;</code> */
      public java.lang.String getTagName() {
        java.lang.Object ref = tagName_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tagName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string tagName = 1;</code> */
      public akka.protobuf.ByteString getTagNameBytes() {
        java.lang.Object ref = tagName_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          tagName_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string tagName = 1;</code> */
      public Builder setTagName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        tagName_ = value;
        onChanged();
        return this;
      }
      /** <code>required string tagName = 1;</code> */
      public Builder clearTagName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tagName_ = getDefaultInstance().getTagName();
        onChanged();
        return this;
      }
      /** <code>required string tagName = 1;</code> */
      public Builder setTagNameBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        tagName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /** <code>required string key = 2;</code> */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /** <code>required string key = 2;</code> */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string key = 2;</code> */
      public akka.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string key = 2;</code> */
      public Builder setKey(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }
      /** <code>required string key = 2;</code> */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /** <code>required string key = 2;</code> */
      public Builder setKeyBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object requestedStatus_ = "";
      /** <code>required string requestedStatus = 3;</code> */
      public boolean hasRequestedStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /** <code>required string requestedStatus = 3;</code> */
      public java.lang.String getRequestedStatus() {
        java.lang.Object ref = requestedStatus_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            requestedStatus_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string requestedStatus = 3;</code> */
      public akka.protobuf.ByteString getRequestedStatusBytes() {
        java.lang.Object ref = requestedStatus_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          requestedStatus_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string requestedStatus = 3;</code> */
      public Builder setRequestedStatus(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        requestedStatus_ = value;
        onChanged();
        return this;
      }
      /** <code>required string requestedStatus = 3;</code> */
      public Builder clearRequestedStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        requestedStatus_ = getDefaultInstance().getRequestedStatus();
        onChanged();
        return this;
      }
      /** <code>required string requestedStatus = 3;</code> */
      public Builder setRequestedStatusBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        requestedStatus_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object observedStatus_ = "";
      /** <code>required string observedStatus = 4;</code> */
      public boolean hasObservedStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /** <code>required string observedStatus = 4;</code> */
      public java.lang.String getObservedStatus() {
        java.lang.Object ref = observedStatus_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            observedStatus_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string observedStatus = 4;</code> */
      public akka.protobuf.ByteString getObservedStatusBytes() {
        java.lang.Object ref = observedStatus_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          observedStatus_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string observedStatus = 4;</code> */
      public Builder setObservedStatus(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        observedStatus_ = value;
        onChanged();
        return this;
      }
      /** <code>required string observedStatus = 4;</code> */
      public Builder clearObservedStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        observedStatus_ = getDefaultInstance().getObservedStatus();
        onChanged();
        return this;
      }
      /** <code>required string observedStatus = 4;</code> */
      public Builder setObservedStatusBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        observedStatus_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.lightbend.lagom.internal.projection.Worker)
    }

    static {
      defaultInstance = new Worker(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.lightbend.lagom.internal.projection.Worker)
  }

  public interface ProjectionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:com.lightbend.lagom.internal.projection.Projection)
      akka.protobuf.MessageOrBuilder {

    /** <code>required string name = 1;</code> */
    boolean hasName();
    /** <code>required string name = 1;</code> */
    java.lang.String getName();
    /** <code>required string name = 1;</code> */
    akka.protobuf.ByteString getNameBytes();

    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    java.util.List<com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>
        getWorkersList();
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker getWorkers(
        int index);
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    int getWorkersCount();
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    java.util.List<
            ? extends
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .WorkerOrBuilder>
        getWorkersOrBuilderList();
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerOrBuilder
        getWorkersOrBuilder(int index);
  }
  /** Protobuf type {@code com.lightbend.lagom.internal.projection.Projection} */
  public static final class Projection extends akka.protobuf.GeneratedMessage
      implements
      // @@protoc_insertion_point(message_implements:com.lightbend.lagom.internal.projection.Projection)
      ProjectionOrBuilder {
    // Use Projection.newBuilder() to construct.
    private Projection(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private Projection(boolean noInit) {
      this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private static final Projection defaultInstance;

    public static Projection getDefaultInstance() {
      return defaultInstance;
    }

    public Projection getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;

    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Projection(
        akka.protobuf.CodedInputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownField(
                    input, unknownFields,
                    extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
            case 18:
              {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  workers_ =
                      new java.util.ArrayList<
                          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                              .Worker>();
                  mutable_bitField0_ |= 0x00000002;
                }
                workers_.add(
                    input.readMessage(
                        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                            .Worker.PARSER,
                        extensionRegistry));
                break;
              }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(e.getMessage())
            .setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          workers_ = java.util.Collections.unmodifiableList(workers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_Projection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                  .class,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                  .Builder.class);
    }

    public static akka.protobuf.Parser<Projection> PARSER =
        new akka.protobuf.AbstractParser<Projection>() {
          public Projection parsePartialFrom(
              akka.protobuf.CodedInputStream input,
              akka.protobuf.ExtensionRegistryLite extensionRegistry)
              throws akka.protobuf.InvalidProtocolBufferException {
            return new Projection(input, extensionRegistry);
          }
        };

    @java.lang.Override
    public akka.protobuf.Parser<Projection> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /** <code>required string name = 1;</code> */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /** <code>required string name = 1;</code> */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /** <code>required string name = 1;</code> */
    public akka.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    public static final int WORKERS_FIELD_NUMBER = 2;
    private java.util.List<
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>
        workers_;
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    public java.util.List<
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>
        getWorkersList() {
      return workers_;
    }
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    public java.util.List<
            ? extends
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .WorkerOrBuilder>
        getWorkersOrBuilderList() {
      return workers_;
    }
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    public int getWorkersCount() {
      return workers_.size();
    }
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
        getWorkers(int index) {
      return workers_.get(index);
    }
    /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
    public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerOrBuilder
        getWorkersOrBuilder(int index) {
      return workers_.get(index);
    }

    private void initFields() {
      name_ = "";
      workers_ = java.util.Collections.emptyList();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getWorkersCount(); i++) {
        if (!getWorkers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < workers_.size(); i++) {
        output.writeMessage(2, workers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < workers_.size(); i++) {
        size += akka.protobuf.CodedOutputStream.computeMessageSize(2, workers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(akka.protobuf.ByteString data)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(
            akka.protobuf.ByteString data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(byte[] data) throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(byte[] data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseDelimitedFrom(
            java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(akka.protobuf.CodedInputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        parseFrom(
            akka.protobuf.CodedInputStream input,
            akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
            prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code com.lightbend.lagom.internal.projection.Projection} */
    public static final class Builder extends akka.protobuf.GeneratedMessage.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.lightbend.lagom.internal.projection.Projection)
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .ProjectionOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Projection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                    .class,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                    .Builder.class);
      }

      // Construct using
      // com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getWorkersFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (workersBuilder_ == null) {
          workers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          workersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
          getDefaultInstanceForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
            .getDefaultInstance();
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
          build() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
          buildPartial() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection result =
            new com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection(
                this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (workersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            workers_ = java.util.Collections.unmodifiableList(workers_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.workers_ = workers_;
        } else {
          result.workers_ = workersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other
            instanceof
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection) {
          return mergeFrom(
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              other) {
        if (other
            == com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                .getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (workersBuilder_ == null) {
          if (!other.workers_.isEmpty()) {
            if (workers_.isEmpty()) {
              workers_ = other.workers_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWorkersIsMutable();
              workers_.addAll(other.workers_);
            }
            onChanged();
          }
        } else {
          if (!other.workers_.isEmpty()) {
            if (workersBuilder_.isEmpty()) {
              workersBuilder_.dispose();
              workersBuilder_ = null;
              workers_ = other.workers_;
              bitField0_ = (bitField0_ & ~0x00000002);
              workersBuilder_ =
                  akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders
                      ? getWorkersFieldBuilder()
                      : null;
            } else {
              workersBuilder_.addAllMessages(other.workers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {

          return false;
        }
        for (int i = 0; i < getWorkersCount(); i++) {
          if (!getWorkers(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection)
                  e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.lang.Object name_ = "";
      /** <code>required string name = 1;</code> */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /** <code>required string name = 1;</code> */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string name = 1;</code> */
      public akka.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string name = 1;</code> */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /** <code>required string name = 1;</code> */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /** <code>required string name = 1;</code> */
      public Builder setNameBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>
          workers_ = java.util.Collections.emptyList();

      private void ensureWorkersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          workers_ =
              new java.util.ArrayList<
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>(
                  workers_);
          bitField0_ |= 0x00000002;
        }
      }

      private akka.protobuf.RepeatedFieldBuilder<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                  .Builder,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .WorkerOrBuilder>
          workersBuilder_;

      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker>
          getWorkersList() {
        if (workersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(workers_);
        } else {
          return workersBuilder_.getMessageList();
        }
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public int getWorkersCount() {
        if (workersBuilder_ == null) {
          return workers_.size();
        } else {
          return workersBuilder_.getCount();
        }
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
          getWorkers(int index) {
        if (workersBuilder_ == null) {
          return workers_.get(index);
        } else {
          return workersBuilder_.getMessage(index);
        }
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder setWorkers(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker value) {
        if (workersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkersIsMutable();
          workers_.set(index, value);
          onChanged();
        } else {
          workersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder setWorkers(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
              builderForValue) {
        if (workersBuilder_ == null) {
          ensureWorkersIsMutable();
          workers_.set(index, builderForValue.build());
          onChanged();
        } else {
          workersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder addWorkers(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker value) {
        if (workersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkersIsMutable();
          workers_.add(value);
          onChanged();
        } else {
          workersBuilder_.addMessage(value);
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder addWorkers(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker value) {
        if (workersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkersIsMutable();
          workers_.add(index, value);
          onChanged();
        } else {
          workersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder addWorkers(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
              builderForValue) {
        if (workersBuilder_ == null) {
          ensureWorkersIsMutable();
          workers_.add(builderForValue.build());
          onChanged();
        } else {
          workersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder addWorkers(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
              builderForValue) {
        if (workersBuilder_ == null) {
          ensureWorkersIsMutable();
          workers_.add(index, builderForValue.build());
          onChanged();
        } else {
          workersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder addAllWorkers(
          java.lang.Iterable<
                  ? extends
                      com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                          .Worker>
              values) {
        if (workersBuilder_ == null) {
          ensureWorkersIsMutable();
          akka.protobuf.AbstractMessageLite.Builder.addAll(values, workers_);
          onChanged();
        } else {
          workersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder clearWorkers() {
        if (workersBuilder_ == null) {
          workers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          workersBuilder_.clear();
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public Builder removeWorkers(int index) {
        if (workersBuilder_ == null) {
          ensureWorkersIsMutable();
          workers_.remove(index);
          onChanged();
        } else {
          workersBuilder_.remove(index);
        }
        return this;
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
          getWorkersBuilder(int index) {
        return getWorkersFieldBuilder().getBuilder(index);
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerOrBuilder
          getWorkersOrBuilder(int index) {
        if (workersBuilder_ == null) {
          return workers_.get(index);
        } else {
          return workersBuilder_.getMessageOrBuilder(index);
        }
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public java.util.List<
              ? extends
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .WorkerOrBuilder>
          getWorkersOrBuilderList() {
        if (workersBuilder_ != null) {
          return workersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(workers_);
        }
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
          addWorkersBuilder() {
        return getWorkersFieldBuilder()
            .addBuilder(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                    .getDefaultInstance());
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker.Builder
          addWorkersBuilder(int index) {
        return getWorkersFieldBuilder()
            .addBuilder(
                index,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                    .getDefaultInstance());
      }
      /** <code>repeated .com.lightbend.lagom.internal.projection.Worker workers = 2;</code> */
      public java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                  .Builder>
          getWorkersBuilderList() {
        return getWorkersFieldBuilder().getBuilderList();
      }

      private akka.protobuf.RepeatedFieldBuilder<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                  .Builder,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .WorkerOrBuilder>
          getWorkersFieldBuilder() {
        if (workersBuilder_ == null) {
          workersBuilder_ =
              new akka.protobuf.RepeatedFieldBuilder<
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker,
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Worker
                      .Builder,
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .WorkerOrBuilder>(
                  workers_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          workers_ = null;
        }
        return workersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.lightbend.lagom.internal.projection.Projection)
    }

    static {
      defaultInstance = new Projection(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.lightbend.lagom.internal.projection.Projection)
  }

  public interface StateOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:com.lightbend.lagom.internal.projection.State)
      akka.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    java.util.List<
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection>
        getProjectionsList();
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        getProjections(int index);
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    int getProjectionsCount();
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    java.util.List<
            ? extends
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .ProjectionOrBuilder>
        getProjectionsOrBuilderList();
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.ProjectionOrBuilder
        getProjectionsOrBuilder(int index);
  }
  /** Protobuf type {@code com.lightbend.lagom.internal.projection.State} */
  public static final class State extends akka.protobuf.GeneratedMessage
      implements
      // @@protoc_insertion_point(message_implements:com.lightbend.lagom.internal.projection.State)
      StateOrBuilder {
    // Use State.newBuilder() to construct.
    private State(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private State(boolean noInit) {
      this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private static final State defaultInstance;

    public static State getDefaultInstance() {
      return defaultInstance;
    }

    public State getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;

    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private State(
        akka.protobuf.CodedInputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownField(
                    input, unknownFields,
                    extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  projections_ =
                      new java.util.ArrayList<
                          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                              .Projection>();
                  mutable_bitField0_ |= 0x00000001;
                }
                projections_.add(
                    input.readMessage(
                        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                            .Projection.PARSER,
                        extensionRegistry));
                break;
              }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(e.getMessage())
            .setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          projections_ = java.util.Collections.unmodifiableList(projections_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_State_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State.class,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State.Builder
                  .class);
    }

    public static akka.protobuf.Parser<State> PARSER =
        new akka.protobuf.AbstractParser<State>() {
          public State parsePartialFrom(
              akka.protobuf.CodedInputStream input,
              akka.protobuf.ExtensionRegistryLite extensionRegistry)
              throws akka.protobuf.InvalidProtocolBufferException {
            return new State(input, extensionRegistry);
          }
        };

    @java.lang.Override
    public akka.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    public static final int PROJECTIONS_FIELD_NUMBER = 1;
    private java.util.List<
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection>
        projections_;
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    public java.util.List<
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection>
        getProjectionsList() {
      return projections_;
    }
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    public java.util.List<
            ? extends
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .ProjectionOrBuilder>
        getProjectionsOrBuilderList() {
      return projections_;
    }
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    public int getProjectionsCount() {
      return projections_.size();
    }
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
        getProjections(int index) {
      return projections_.get(index);
    }
    /**
     * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
     */
    public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .ProjectionOrBuilder
        getProjectionsOrBuilder(int index) {
      return projections_.get(index);
    }

    private void initFields() {
      projections_ = java.util.Collections.emptyList();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getProjectionsCount(); i++) {
        if (!getProjections(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < projections_.size(); i++) {
        output.writeMessage(1, projections_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < projections_.size(); i++) {
        size += akka.protobuf.CodedOutputStream.computeMessageSize(1, projections_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(akka.protobuf.ByteString data)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(
            akka.protobuf.ByteString data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(byte[] data) throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(byte[] data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseDelimitedFrom(
            java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(akka.protobuf.CodedInputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
        parseFrom(
            akka.protobuf.CodedInputStream input,
            akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code com.lightbend.lagom.internal.projection.State} */
    public static final class Builder extends akka.protobuf.GeneratedMessage.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.lightbend.lagom.internal.projection.State)
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.StateOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_State_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State.class,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
                    .Builder.class);
      }

      // Construct using
      // com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProjectionsFieldBuilder();
        }
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (projectionsBuilder_ == null) {
          projections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          projectionsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_State_descriptor;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
          getDefaultInstanceForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
            .getDefaultInstance();
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State build() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
          buildPartial() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State result =
            new com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State(this);
        int from_bitField0_ = bitField0_;
        if (projectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            projections_ = java.util.Collections.unmodifiableList(projections_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.projections_ = projections_;
        } else {
          result.projections_ = projectionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other
            instanceof
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State) {
          return mergeFrom(
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State other) {
        if (other
            == com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
                .getDefaultInstance()) return this;
        if (projectionsBuilder_ == null) {
          if (!other.projections_.isEmpty()) {
            if (projections_.isEmpty()) {
              projections_ = other.projections_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureProjectionsIsMutable();
              projections_.addAll(other.projections_);
            }
            onChanged();
          }
        } else {
          if (!other.projections_.isEmpty()) {
            if (projectionsBuilder_.isEmpty()) {
              projectionsBuilder_.dispose();
              projectionsBuilder_ = null;
              projections_ = other.projections_;
              bitField0_ = (bitField0_ & ~0x00000001);
              projectionsBuilder_ =
                  akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders
                      ? getProjectionsFieldBuilder()
                      : null;
            } else {
              projectionsBuilder_.addAllMessages(other.projections_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getProjectionsCount(); i++) {
          if (!getProjections(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.State)
                  e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection>
          projections_ = java.util.Collections.emptyList();

      private void ensureProjectionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          projections_ =
              new java.util.ArrayList<
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .Projection>(projections_);
          bitField0_ |= 0x00000001;
        }
      }

      private akka.protobuf.RepeatedFieldBuilder<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                  .Builder,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .ProjectionOrBuilder>
          projectionsBuilder_;

      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection>
          getProjectionsList() {
        if (projectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(projections_);
        } else {
          return projectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public int getProjectionsCount() {
        if (projectionsBuilder_ == null) {
          return projections_.size();
        } else {
          return projectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
          getProjections(int index) {
        if (projectionsBuilder_ == null) {
          return projections_.get(index);
        } else {
          return projectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder setProjections(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              value) {
        if (projectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProjectionsIsMutable();
          projections_.set(index, value);
          onChanged();
        } else {
          projectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder setProjections(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection.Builder
              builderForValue) {
        if (projectionsBuilder_ == null) {
          ensureProjectionsIsMutable();
          projections_.set(index, builderForValue.build());
          onChanged();
        } else {
          projectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder addProjections(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              value) {
        if (projectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProjectionsIsMutable();
          projections_.add(value);
          onChanged();
        } else {
          projectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder addProjections(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              value) {
        if (projectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProjectionsIsMutable();
          projections_.add(index, value);
          onChanged();
        } else {
          projectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder addProjections(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection.Builder
              builderForValue) {
        if (projectionsBuilder_ == null) {
          ensureProjectionsIsMutable();
          projections_.add(builderForValue.build());
          onChanged();
        } else {
          projectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder addProjections(
          int index,
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection.Builder
              builderForValue) {
        if (projectionsBuilder_ == null) {
          ensureProjectionsIsMutable();
          projections_.add(index, builderForValue.build());
          onChanged();
        } else {
          projectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder addAllProjections(
          java.lang.Iterable<
                  ? extends
                      com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                          .Projection>
              values) {
        if (projectionsBuilder_ == null) {
          ensureProjectionsIsMutable();
          akka.protobuf.AbstractMessageLite.Builder.addAll(values, projections_);
          onChanged();
        } else {
          projectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder clearProjections() {
        if (projectionsBuilder_ == null) {
          projections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          projectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public Builder removeProjections(int index) {
        if (projectionsBuilder_ == null) {
          ensureProjectionsIsMutable();
          projections_.remove(index);
          onChanged();
        } else {
          projectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              .Builder
          getProjectionsBuilder(int index) {
        return getProjectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
              .ProjectionOrBuilder
          getProjectionsOrBuilder(int index) {
        if (projectionsBuilder_ == null) {
          return projections_.get(index);
        } else {
          return projectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public java.util.List<
              ? extends
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .ProjectionOrBuilder>
          getProjectionsOrBuilderList() {
        if (projectionsBuilder_ != null) {
          return projectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(projections_);
        }
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              .Builder
          addProjectionsBuilder() {
        return getProjectionsFieldBuilder()
            .addBuilder(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                    .getDefaultInstance());
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
              .Builder
          addProjectionsBuilder(int index) {
        return getProjectionsFieldBuilder()
            .addBuilder(
                index,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                    .getDefaultInstance());
      }
      /**
       * <code>repeated .com.lightbend.lagom.internal.projection.Projection projections = 1;</code>
       */
      public java.util.List<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                  .Builder>
          getProjectionsBuilderList() {
        return getProjectionsFieldBuilder().getBuilderList();
      }

      private akka.protobuf.RepeatedFieldBuilder<
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                  .Builder,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .ProjectionOrBuilder>
          getProjectionsFieldBuilder() {
        if (projectionsBuilder_ == null) {
          projectionsBuilder_ =
              new akka.protobuf.RepeatedFieldBuilder<
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .Projection,
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.Projection
                      .Builder,
                  com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .ProjectionOrBuilder>(
                  projections_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          projections_ = null;
        }
        return projectionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.lightbend.lagom.internal.projection.State)
    }

    static {
      defaultInstance = new State(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.lightbend.lagom.internal.projection.State)
  }

  public interface WorkerCoordinatesOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:com.lightbend.lagom.internal.projection.WorkerCoordinates)
      akka.protobuf.MessageOrBuilder {

    /** <code>required string projectionName = 1;</code> */
    boolean hasProjectionName();
    /** <code>required string projectionName = 1;</code> */
    java.lang.String getProjectionName();
    /** <code>required string projectionName = 1;</code> */
    akka.protobuf.ByteString getProjectionNameBytes();

    /** <code>required string tagName = 2;</code> */
    boolean hasTagName();
    /** <code>required string tagName = 2;</code> */
    java.lang.String getTagName();
    /** <code>required string tagName = 2;</code> */
    akka.protobuf.ByteString getTagNameBytes();
  }
  /** Protobuf type {@code com.lightbend.lagom.internal.projection.WorkerCoordinates} */
  public static final class WorkerCoordinates extends akka.protobuf.GeneratedMessage
      implements
      // @@protoc_insertion_point(message_implements:com.lightbend.lagom.internal.projection.WorkerCoordinates)
      WorkerCoordinatesOrBuilder {
    // Use WorkerCoordinates.newBuilder() to construct.
    private WorkerCoordinates(akka.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private WorkerCoordinates(boolean noInit) {
      this.unknownFields = akka.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    private static final WorkerCoordinates defaultInstance;

    public static WorkerCoordinates getDefaultInstance() {
      return defaultInstance;
    }

    public WorkerCoordinates getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final akka.protobuf.UnknownFieldSet unknownFields;

    @java.lang.Override
    public final akka.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private WorkerCoordinates(
        akka.protobuf.CodedInputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
        throws akka.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      akka.protobuf.UnknownFieldSet.Builder unknownFields =
          akka.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!parseUnknownField(
                    input, unknownFields,
                    extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            case 10:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                projectionName_ = bs;
                break;
              }
            case 18:
              {
                akka.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                tagName_ = bs;
                break;
              }
          }
        }
      } catch (akka.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new akka.protobuf.InvalidProtocolBufferException(e.getMessage())
            .setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor;
    }

    protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
          .internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .WorkerCoordinates.class,
              com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                  .WorkerCoordinates.Builder.class);
    }

    public static akka.protobuf.Parser<WorkerCoordinates> PARSER =
        new akka.protobuf.AbstractParser<WorkerCoordinates>() {
          public WorkerCoordinates parsePartialFrom(
              akka.protobuf.CodedInputStream input,
              akka.protobuf.ExtensionRegistryLite extensionRegistry)
              throws akka.protobuf.InvalidProtocolBufferException {
            return new WorkerCoordinates(input, extensionRegistry);
          }
        };

    @java.lang.Override
    public akka.protobuf.Parser<WorkerCoordinates> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PROJECTIONNAME_FIELD_NUMBER = 1;
    private java.lang.Object projectionName_;
    /** <code>required string projectionName = 1;</code> */
    public boolean hasProjectionName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /** <code>required string projectionName = 1;</code> */
    public java.lang.String getProjectionName() {
      java.lang.Object ref = projectionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          projectionName_ = s;
        }
        return s;
      }
    }
    /** <code>required string projectionName = 1;</code> */
    public akka.protobuf.ByteString getProjectionNameBytes() {
      java.lang.Object ref = projectionName_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        projectionName_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    public static final int TAGNAME_FIELD_NUMBER = 2;
    private java.lang.Object tagName_;
    /** <code>required string tagName = 2;</code> */
    public boolean hasTagName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /** <code>required string tagName = 2;</code> */
    public java.lang.String getTagName() {
      java.lang.Object ref = tagName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tagName_ = s;
        }
        return s;
      }
    }
    /** <code>required string tagName = 2;</code> */
    public akka.protobuf.ByteString getTagNameBytes() {
      java.lang.Object ref = tagName_;
      if (ref instanceof java.lang.String) {
        akka.protobuf.ByteString b = akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tagName_ = b;
        return b;
      } else {
        return (akka.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      projectionName_ = "";
      tagName_ = "";
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasProjectionName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTagName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(akka.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProjectionNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTagNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(1, getProjectionNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += akka.protobuf.CodedOutputStream.computeBytesSize(2, getTagNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;

    @java.lang.Override
    protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(akka.protobuf.ByteString data)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(
            akka.protobuf.ByteString data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(byte[] data) throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(byte[] data, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws akka.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseDelimitedFrom(
            java.io.InputStream input, akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(akka.protobuf.CodedInputStream input) throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates
        parseFrom(
            akka.protobuf.CodedInputStream input,
            akka.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates
            prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(akka.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /** Protobuf type {@code com.lightbend.lagom.internal.projection.WorkerCoordinates} */
    public static final class Builder extends akka.protobuf.GeneratedMessage.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:com.lightbend.lagom.internal.projection.WorkerCoordinates)
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinatesOrBuilder {
      public static final akka.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor;
      }

      protected akka.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .WorkerCoordinates.class,
                com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .WorkerCoordinates.Builder.class);
      }

      // Construct using
      // com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(akka.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (akka.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {}
      }

      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        projectionName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tagName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public akka.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
              .WorkerCoordinates
          getDefaultInstanceForType() {
        return com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
            .WorkerCoordinates.getDefaultInstance();
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
              .WorkerCoordinates
          build() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
              .WorkerCoordinates
          buildPartial() {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates
            result =
                new com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                    .WorkerCoordinates(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.projectionName_ = projectionName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tagName_ = tagName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(akka.protobuf.Message other) {
        if (other
            instanceof
            com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                .WorkerCoordinates) {
          return mergeFrom(
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .WorkerCoordinates)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates
              other) {
        if (other
            == com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                .WorkerCoordinates.getDefaultInstance()) return this;
        if (other.hasProjectionName()) {
          bitField0_ |= 0x00000001;
          projectionName_ = other.projectionName_;
          onChanged();
        }
        if (other.hasTagName()) {
          bitField0_ |= 0x00000002;
          tagName_ = other.tagName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProjectionName()) {

          return false;
        }
        if (!hasTagName()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          akka.protobuf.CodedInputStream input,
          akka.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages.WorkerCoordinates
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (akka.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.lightbend.lagom.internal.projection.protobuf.msg.ProjectionMessages
                      .WorkerCoordinates)
                  e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.lang.Object projectionName_ = "";
      /** <code>required string projectionName = 1;</code> */
      public boolean hasProjectionName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /** <code>required string projectionName = 1;</code> */
      public java.lang.String getProjectionName() {
        java.lang.Object ref = projectionName_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            projectionName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string projectionName = 1;</code> */
      public akka.protobuf.ByteString getProjectionNameBytes() {
        java.lang.Object ref = projectionName_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          projectionName_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string projectionName = 1;</code> */
      public Builder setProjectionName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        projectionName_ = value;
        onChanged();
        return this;
      }
      /** <code>required string projectionName = 1;</code> */
      public Builder clearProjectionName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        projectionName_ = getDefaultInstance().getProjectionName();
        onChanged();
        return this;
      }
      /** <code>required string projectionName = 1;</code> */
      public Builder setProjectionNameBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        projectionName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tagName_ = "";
      /** <code>required string tagName = 2;</code> */
      public boolean hasTagName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /** <code>required string tagName = 2;</code> */
      public java.lang.String getTagName() {
        java.lang.Object ref = tagName_;
        if (!(ref instanceof java.lang.String)) {
          akka.protobuf.ByteString bs = (akka.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tagName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /** <code>required string tagName = 2;</code> */
      public akka.protobuf.ByteString getTagNameBytes() {
        java.lang.Object ref = tagName_;
        if (ref instanceof String) {
          akka.protobuf.ByteString b =
              akka.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          tagName_ = b;
          return b;
        } else {
          return (akka.protobuf.ByteString) ref;
        }
      }
      /** <code>required string tagName = 2;</code> */
      public Builder setTagName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        tagName_ = value;
        onChanged();
        return this;
      }
      /** <code>required string tagName = 2;</code> */
      public Builder clearTagName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tagName_ = getDefaultInstance().getTagName();
        onChanged();
        return this;
      }
      /** <code>required string tagName = 2;</code> */
      public Builder setTagNameBytes(akka.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        tagName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.lightbend.lagom.internal.projection.WorkerCoordinates)
    }

    static {
      defaultInstance = new WorkerCoordinates(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.lightbend.lagom.internal.projection.WorkerCoordinates)
  }

  private static final akka.protobuf.Descriptors.Descriptor
      internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor;
  private static akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_lightbend_lagom_internal_projection_Worker_fieldAccessorTable;
  private static final akka.protobuf.Descriptors.Descriptor
      internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor;
  private static akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_lightbend_lagom_internal_projection_Projection_fieldAccessorTable;
  private static final akka.protobuf.Descriptors.Descriptor
      internal_static_com_lightbend_lagom_internal_projection_State_descriptor;
  private static akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_lightbend_lagom_internal_projection_State_fieldAccessorTable;
  private static final akka.protobuf.Descriptors.Descriptor
      internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor;
  private static akka.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_fieldAccessorTable;

  public static akka.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static akka.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n\030ProjectionMessages.proto\022\'com.lightben"
          + "d.lagom.internal.projection\"W\n\006Worker\022\017\n"
          + "\007tagName\030\001 \002(\t\022\013\n\003key\030\002 \002(\t\022\027\n\017requested"
          + "Status\030\003 \002(\t\022\026\n\016observedStatus\030\004 \002(\t\"\\\n\n"
          + "Projection\022\014\n\004name\030\001 \002(\t\022@\n\007workers\030\002 \003("
          + "\0132/.com.lightbend.lagom.internal.project"
          + "ion.Worker\"Q\n\005State\022H\n\013projections\030\001 \003(\013"
          + "23.com.lightbend.lagom.internal.projecti"
          + "on.Projection\"<\n\021WorkerCoordinates\022\026\n\016pr"
          + "ojectionName\030\001 \002(\t\022\017\n\007tagName\030\002 \002(\tB8\n4c",
      "om.lightbend.lagom.internal.projection.p" + "rotobuf.msgH\001"
    };
    akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new akka.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public akka.protobuf.ExtensionRegistry assignDescriptors(
              akka.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    akka.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData, new akka.protobuf.Descriptors.FileDescriptor[] {}, assigner);
    internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_com_lightbend_lagom_internal_projection_Worker_fieldAccessorTable =
        new akka.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_lightbend_lagom_internal_projection_Worker_descriptor,
            new java.lang.String[] {
              "TagName", "Key", "RequestedStatus", "ObservedStatus",
            });
    internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_com_lightbend_lagom_internal_projection_Projection_fieldAccessorTable =
        new akka.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_lightbend_lagom_internal_projection_Projection_descriptor,
            new java.lang.String[] {
              "Name", "Workers",
            });
    internal_static_com_lightbend_lagom_internal_projection_State_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_com_lightbend_lagom_internal_projection_State_fieldAccessorTable =
        new akka.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_lightbend_lagom_internal_projection_State_descriptor,
            new java.lang.String[] {
              "Projections",
            });
    internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_fieldAccessorTable =
        new akka.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_lightbend_lagom_internal_projection_WorkerCoordinates_descriptor,
            new java.lang.String[] {
              "ProjectionName", "TagName",
            });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
