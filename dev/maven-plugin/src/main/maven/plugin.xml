<!-- This is not the final file that gets used, this is processed by the SbtMavenPlugin, in the sbt project directory. -->
<plugin>
    <!-- The regular meta data required by maven here is generated by the SbtMavenPlugin -->
    <goalPrefix>lagom</goalPrefix>

    <!-- This section is not part of the maven spec, but rather is used by the SbtMavenPlugin to essentially template
     parameters used in mojos below, rather than having to repeat their configuration over and over for each mojo. -->
    <parameterManagement>
        <parameter>
            <name>lagomService</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether this project is a Lagom service or not.</description>
            <configuration>
                <lagomService implementation="boolean" default-value="false"/>
            </configuration>
        </parameter>
        <parameter>
            <name>playService</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether this project is a Play service or not</description>
            <configuration>
                <playService implementation="boolean" default-value="false"/>
            </configuration>
        </parameter>
        <parameter>
            <name>servicePortRange</name>
            <type>com.lightbend.lagom.maven.PortRangeBean</type>
            <required>false</required>
            <editable>true</editable>
            <description>The range of ports this service should run on</description>
        </parameter>
        <parameter>
            <name>serviceAddress</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The address this service should run on</description>
            <configuration>
                <serviceAddress implementation="java.lang.String" default-value="127.0.0.1"/>
            </configuration>
        </parameter>
        <parameter>
            <name>servicePort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port this service should run on</description>
            <configuration>
                <servicePort implementation="int" default-value="-1"/>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceHttpPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The http port this service should run on</description>
            <configuration>
                <serviceHttpPort implementation="int" default-value="-1"/>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceHttpsPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The https port this service should run on</description>
            <configuration>
                <serviceHttpsPort implementation="int" default-value="-1"/>
            </configuration>
        </parameter>
        <parameter>
            <name>watchDirs</name>
            <type>java.util.List</type>
            <required>false</required>
            <editable>true</editable>
            <description>Additional source directories to watch in dev mode</description>
        </parameter>

        <parameter>
            <name>cassandraMaxBootWaitingSeconds</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The timeout to wait for Cassandra to start.</description>
            <configuration>
                <cassandraMaxBootWaitingSeconds implementation="int" default-value="20" />
            </configuration>
        </parameter>
        <parameter>
            <name>cassandraPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port to run Cassandra on.</description>
            <configuration>
                <cassandraPort implementation="int" default-value="4000">${cassandra.port}</cassandraPort>
            </configuration>
        </parameter>
        <parameter>
            <name>cassandraEnabled</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether Cassandra is enabled or not.</description>
            <configuration>
                <cassandraEnabled implementation="boolean" default-value="true">${cassandra.enabled}</cassandraEnabled>
            </configuration>
        </parameter>
        <parameter>
            <name>cassandraCleanOnStart</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether the Cassandra database should be cleaned when it starts.</description>
            <configuration>
                <cassandraCleanOnStart implementation="boolean" default-value="false">${cassandra.cleanOnStart}</cassandraCleanOnStart>
            </configuration>
        </parameter>
        <parameter>
            <name>cassandraJvmOptions</name>
            <type>java.util.List</type>
            <required>false</required>
            <editable>true</editable>
            <description>The JVM options to pass to Cassandra.</description>
        </parameter>
        <parameter>
            <name>cassandraYamlFile</name>
            <type>java.util.File</type>
            <required>false</required>
            <editable>true</editable>
            <description>The relative path to a cassandra yaml configuration to use to start Cassandra.</description>
        </parameter>

        <parameter>
            <name>kafkaPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port to run Kafka on.</description>
            <configuration>
                <kafkaPort implementation="int" default-value="9092">${kafka.port}</kafkaPort>
            </configuration>
        </parameter>
        <parameter>
            <name>zookeeperPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port to run ZooKeeper on.</description>
            <configuration>
                <zookeeperPort implementation="int" default-value="2181">${zookeeper.port}</zookeeperPort>
            </configuration>
        </parameter>
        <parameter>
            <name>kafkaEnabled</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether Kafka is enabled or not.</description>
            <configuration>
                <kafkaEnabled implementation="boolean" default-value="true">${kafka.enabled}</kafkaEnabled>
            </configuration>
        </parameter>
        <parameter>
            <name>kafkaCleanOnStart</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether the Kafka log should be cleaned when it starts.</description>
            <configuration>
                <kafkaCleanOnStart implementation="boolean" default-value="true">${kafka.cleanOnStart}</kafkaCleanOnStart>
            </configuration>
        </parameter>
        <parameter>
            <name>kafkaJvmOptions</name>
            <type>java.util.List</type>
            <required>false</required>
            <editable>true</editable>
            <description>The JVM options to pass to Kafka.</description>
        </parameter>
        <parameter>
            <name>kafkaPropertiesFile</name>
            <type>java.util.File</type>
            <required>false</required>
            <editable>true</editable>
            <description>The relative path to the sever.properties to use to start Kafka.</description>
        </parameter>
         <parameter>
            <name>kafkaAddress</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The Kafka address.</description>
            <configuration>
                <kafkaAddress implementation="java.lang.String">${kafka.address}</kafkaAddress>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceLocatorAddress</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The host to run the service locator on.</description>
            <configuration>
                <serviceLocatorAddress implementation="java.lang.String" default-value="127.0.0.1">${service.locator.address}</serviceLocatorAddress>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceLocatorPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port to run the service locator on.</description>
            <configuration>
                <serviceLocatorPort implementation="int" default-value="9008">${service.locator.port}</serviceLocatorPort>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceGatewayAddress</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The host to run the service gateway on.</description>
            <configuration>
                <serviceGatewayAddress implementation="java.lang.String" default-value="127.0.0.1">${service.gateway.address}</serviceGatewayAddress>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceGatewayPort</name>
            <type>int</type>
            <required>false</required>
            <editable>true</editable>
            <description>The port to run the service gateway on.</description>
            <configuration>
                <serviceGatewayPort implementation="int" default-value="9000">${service.gateway.port}</serviceGatewayPort>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceGatewayImpl</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The implementation of the service gateway: "akka-http" (default) or "netty".</description>
            <configuration>
                <serviceGatewayImpl implementation="java.lang.String" default-value="akka-http">${service.gateway.impl}</serviceGatewayImpl>
            </configuration>
        </parameter>
        <parameter>
            <name>serviceLocatorEnabled</name>
            <type>boolean</type>
            <required>false</required>
            <editable>true</editable>
            <description>Whether the service locator is enabled or not.</description>
            <configuration>
                <serviceLocatorEnabled implementation="boolean" default-value="true">${service.locator.enabled}</serviceLocatorEnabled>
            </configuration>
        </parameter>
        <parameter>
            <name>unmanagedServices</name>
            <type>java.util.Map</type>
            <required>false</required>
            <editable>true</editable>
            <description>A map of service names to URLs for services not managed by Lagom.</description>
        </parameter>
        <parameter>
            <name>serviceLocatorUrl</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The service locator URL.</description>
            <configuration>
                <serviceLocatorUrl implementation="java.lang.String">${service.locator.url}</serviceLocatorUrl>
            </configuration>
        </parameter>
        <parameter>
            <name>externalProjects</name>
            <type>java.util.List</type>
            <required>false</required>
            <editable>true</editable>
            <description>A list of external projects to run in dev mode.</description>
        </parameter>

        <parameter>
            <name>sourceConductRBundle</name>
            <type>java.util.File</type>
            <required>false</required>
            <editable>true</editable>
            <description>The source ConductR bundle to rename.</description>
            <configuration>
                <sourceConductRBundle implementation="java.util.File"
                                      default-value="${project.build.directory}/${project.build.finalName}-conductr-bundle.zip"/>
            </configuration>
        </parameter>
        <parameter>
            <name>outputDirectory</name>
            <type>java.util.File</type>
            <required>false</required>
            <editable>true</editable>
            <description>The directory to write the bundle to.</description>
            <configuration>
                <outputDirectory implementation="java.util.File"
                                      default-value="${project.build.directory}"/>
            </configuration>
        </parameter>
        <parameter>
            <name>bundleName</name>
            <type>java.lang.String</type>
            <required>false</required>
            <editable>true</editable>
            <description>The name of the bundle, detected from the bundle itself if not provided.</description>
        </parameter>

    </parameterManagement>

    <!-- All the mojos -->
    <mojos>
        <mojo>
            <goal>configure</goal>
            <description>Configures a Lagom project.</description>
            <implementation>com.lightbend.lagom.maven.ConfigureMojo</implementation>
            <requiresDirectInvocation>true</requiresDirectInvocation>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <parameters>
                <parameter>
                    <name>lagomService</name>
                </parameter>
                <parameter>
                    <name>playService</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>startAll</goal>
            <description>Starts all the Lagom services</description>
            <implementation>com.lightbend.lagom.maven.StartAllMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>pre-integration-test</phase>
        </mojo>
        <mojo>
            <goal>stopAll</goal>
            <description>Stops all the Lagom services</description>
            <implementation>com.lightbend.lagom.maven.StopAllMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>post-integration-test</phase>
        </mojo>
        <mojo>
            <goal>runAll</goal>
            <description>Runs all the Lagom services, blocking for user input, before stopping them all.</description>
            <implementation>com.lightbend.lagom.maven.RunAllMojo</implementation>
            <requiresDirectInvocation>true</requiresDirectInvocation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
        </mojo>


        <mojo>
            <goal>startCassandra</goal>
            <description>Starts Cassandra</description>
            <implementation>com.lightbend.lagom.maven.StartCassandraMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>cassandraMaxBootWaitingSeconds</name>
                </parameter>
                <parameter>
                    <name>cassandraPort</name>
                </parameter>
                <parameter>
                    <name>cassandraEnabled</name>
                </parameter>
                <parameter>
                    <name>cassandraCleanOnStart</name>
                </parameter>
                <parameter>
                    <name>cassandraJvmOptions</name>
                </parameter>
                <parameter>
                    <name>cassandraYamlFile</name>
                </parameter>
            </parameters>
        </mojo>
        <mojo>
            <goal>stopCassandra</goal>
            <description>Stops Cassandra</description>
            <implementation>com.lightbend.lagom.maven.StopCassandraMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>post-integration-test</phase>
            <parameters>
                <parameter>
                    <name>cassandraEnabled</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>startKafka</goal>
            <description>Starts Kafka</description>
            <implementation>com.lightbend.lagom.maven.StartKafkaMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>kafkaPort</name>
                </parameter>
                <parameter>
                    <name>zookeeperPort</name>
                </parameter>
                <parameter>
                    <name>kafkaEnabled</name>
                </parameter>
                <parameter>
                    <name>kafkaCleanOnStart</name>
                </parameter>
                <parameter>
                    <name>kafkaJvmOptions</name>
                </parameter>
                <parameter>
                    <name>kafkaPropertiesFile</name>
                </parameter>
            </parameters>
        </mojo>
        <mojo>
            <goal>stopKafka</goal>
            <description>Stops Kafka</description>
            <implementation>com.lightbend.lagom.maven.StopKafkaMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>post-integration-test</phase>
            <parameters>
                <parameter>
                    <name>kafkaEnabled</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>startServiceLocator</goal>
            <description>Starts the service locator</description>
            <implementation>com.lightbend.lagom.maven.StartServiceLocatorMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>serviceLocatorAddress</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorPort</name>
                </parameter>
                <parameter>
                    <name>serviceGatewayAddress</name>
                </parameter>
                <parameter>
                    <name>serviceGatewayPort</name>
                </parameter>
                <parameter>
                    <name>serviceGatewayImpl</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorEnabled</name>
                </parameter>
                <parameter>
                    <name>unmanagedServices</name>
                </parameter>
                <parameter>
                    <name>cassandraPort</name>
                </parameter>
                <parameter>
                    <name>cassandraEnabled</name>
                </parameter>
                <parameter>
                    <name>kafkaPort</name>
                </parameter>
                <parameter>
                    <name>kafkaAddress</name>
                </parameter>
                <parameter>
                    <name>kafkaEnabled</name>
                </parameter>
            </parameters>
        </mojo>
        <mojo>
            <goal>stopServiceLocator</goal>
            <description>Stops the service locator.</description>
            <implementation>com.lightbend.lagom.maven.StopServiceLocatorMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>singleton</instantiationStrategy>
            <phase>post-integration-test</phase>
            <parameters>
                <parameter>
                    <name>serviceLocatorEnabled</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>start</goal>
            <description>Starts a service in dev mode</description>
            <implementation>com.lightbend.lagom.maven.StartMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>lagomService</name>
                </parameter>
                <parameter>
                    <name>playService</name>
                </parameter>
                <parameter>
                    <name>serviceAddress</name>
                </parameter>
                <parameter>
                    <name>servicePort</name>
                    <deprecated>As of release 1.5.0. Use serviceHttpPort instead.</deprecated>
                </parameter>
                <parameter>
                    <name>serviceHttpPort</name>
                </parameter>
                <parameter>
                    <name>serviceHttpsPort</name>
                </parameter>
                <parameter>
                    <name>servicePortRange</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorPort</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorEnabled</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorUrl</name>
                </parameter>
                <parameter>
                    <name>cassandraEnabled</name>
                </parameter>
                <parameter>
                    <name>cassandraPort</name>
                </parameter>
                <parameter>
                    <name>externalProjects</name>
                </parameter>
                <parameter>
                    <name>watchDirs</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>stop</goal>
            <description>Stops a service dev mode</description>
            <implementation>com.lightbend.lagom.maven.StopMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <phase>post-integration-test</phase>
            <parameters>
                <parameter>
                    <name>lagomService</name>
                </parameter>
                <parameter>
                    <name>playService</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>run</goal>
            <description>Runs a service dev mode, stopping for user input, and then shutting down.</description>
            <implementation>com.lightbend.lagom.maven.RunMojo</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>per-lookup</instantiationStrategy>
        </mojo>

        <mojo>
            <goal>startExternalProjects</goal>
            <description>Starts the external projects for the system.</description>
            <implementation>com.lightbend.lagom.maven.StartExternalProjects</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>externalProjects</name>
                </parameter>
                <parameter>
                    <name>servicePortRange</name>
                </parameter>
                <parameter>
                    <name>serviceAddress</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorPort</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorEnabled</name>
                </parameter>
                <parameter>
                    <name>serviceLocatorUrl</name>
                </parameter>
                <parameter>
                    <name>cassandraEnabled</name>
                </parameter>
                <parameter>
                    <name>cassandraPort</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>stopExternalProjects</goal>
            <description>Stops the external projects for the system.</description>
            <implementation>com.lightbend.lagom.maven.StopExternalProjects</implementation>
            <aggregator>true</aggregator>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <phase>pre-integration-test</phase>
            <parameters>
                <parameter>
                    <name>externalProjects</name>
                </parameter>
            </parameters>
        </mojo>

        <mojo>
            <goal>renameConductRBundle</goal>
            <description>Renames a ConductR bundle to match ConductR requirements.</description>
            <implementation>com.lightbend.lagom.maven.RenameConductRBundleMojo</implementation>
            <instantiationStrategy>per-lookup</instantiationStrategy>
            <phase>package</phase>
            <parameters>
                <parameter>
                    <name>sourceConductRBundle</name>
                </parameter>
                <parameter>
                    <name>bundleName</name>
                </parameter>
                <parameter>
                    <name>outputDirectory</name>
                </parameter>
            </parameters>
        </mojo>

    </mojos>

    <!-- Dependencies are added by the SbtMavenPlugin -->

</plugin>
