play.modules.enabled += com.lightbend.lagom.javadsl.jackson.JacksonModule

akka.actor {
  serializers {
    # Placeholder for Lagom 1.5.x JacksonSerializer.
    # Needed for deserialization (fromBinary) of messages during rolling update,
    # and old data (events, snapshots) that were serialized with the Lagom 1.5.x JacksonSerializer.
    # Note that there is is not included in serialization-bindings so it will
    # not be used for serialization (toBinary)
    old-lagom-json = "akka.serialization.jackson.JacksonJsonSerializer"

    # For CompressedJsonable
    jackson-json-gzip = "akka.serialization.jackson.JacksonJsonSerializer"
  }
  serialization-bindings {
    # Bind Jsonable to Akka JacksonJsonSerializer
    "com.lightbend.lagom.serialization.Jsonable" = jackson-json

    # Bind Jsonable to Akka JacksonJsonSerializer with compression settings
    "com.lightbend.lagom.serialization.CompressedJsonable" = jackson-json-gzip
  }
  serialization-identifiers {
    # For Lagom 1.5.x JacksonSerializer.
    "old-lagom-json" = 1000002

    # For CompressedJsonable
    "jackson-json-gzip" = 1000005
  }
}

akka.serialization.jackson {
  jackson-modules += "com.fasterxml.jackson.datatype.pcollections.PCollectionsModule"
  jackson-modules += "com.fasterxml.jackson.datatype.guava.GuavaModule"
  # FIXME do we have to remove the DefaultScalaModule?

  jackson-json {
    # No compression for message class that implements the Jsonable marker interface.
    # FIXME this config will probably change in Akka 2.6.0-M4
    compress-larger-than = off
  }

  jackson-json-gzip {
    # The serializer will compress the payload if the message class
    # implements the CompressedJsonable marker interface and the payload
    # is larger than this value. Only used for remote messages and persistent data
    # within the cluster of the service.
    compress-larger-than = 1024b
  }
}
