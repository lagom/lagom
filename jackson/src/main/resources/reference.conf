play.modules.enabled += com.lightbend.lagom.javadsl.jackson.JacksonModule

lagom.serialization.json {
  
  #//#jackson-modules
  # The Jackson JSON serializer will register these modules.
  # It is also possible to use jackson-modules = ["*"] to dynamically
  # find and register all modules in the classpath.  
  jackson-modules += "com.fasterxml.jackson.module.paramnames.ParameterNamesModule"
  jackson-modules += "com.fasterxml.jackson.datatype.jdk8.Jdk8Module"
  jackson-modules += "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"
  jackson-modules += "com.fasterxml.jackson.datatype.pcollections.PCollectionsModule"
  jackson-modules += "com.fasterxml.jackson.datatype.guava.GuavaModule"
  #//#jackson-modules  
  
  # The serializer will compress the payload if the message class
  # implements the CompressedJsonable marker interface and the payload 
  # is larger than this value. Only used for remote messages within 
  # the cluster of the service.
  compress-larger-than = 1024b
  
  # Define data migration transformations of old formats to current 
  # format here as a mapping between the (old) class name to be
  # transformed to the JacksonJsonMigration class that implements
  # the transformation.  
  migrations {
  }
}

akka.actor {
  serializers {
    lagom-json = "com.lightbend.lagom.internal.jackson.JacksonJsonSerializer"
  }
  serialization-bindings {
    "com.lightbend.lagom.serialization.Jsonable" = lagom-json
  }
  serialization-identifiers {
    "com.lightbend.lagom.internal.jackson.JacksonJsonSerializer" = 1000002
  }
}
