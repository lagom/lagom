#!/usr/bin/env bash

# Copyright (C) 2009-2019 Lightbend Inc. <https://www.lightbend.com>

# shellcheck source=bin/scriptLib
. "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/scriptLib"

## The following are three separate `sbt` invocations because in some versions of sbt (0.13)
## trying to run all tasks in a single session caused "GC overhead limit exceeded" (both in
## Travis and locally).
## See https://github.com/lagom/lagom/pull/1482

runSbt  +headerCheck \
        +test:headerCheck \
        multi-jvm:headerCheck

declare -a EXTRA_TASKS
if [ "$TRAVIS_EVENT_TYPE" != "cron" ]; then
    EXTRA_TASKS+=("versionSyncCheck")
    # only safe when not cron, b/c snapshot akka versions can break validateDependencies
    EXTRA_TASKS+=("validateDependencies")
fi

runSbt  "${EXTRA_TASKS[@]}" \
        checkAkkaModuleVersions \
        +mimaReportBinaryIssues

printMessage "VALIDATE SCALA CODE FORMATTING"
runSbt scalafmtAll scalafmtSbt
git diff --exit-code || (
  echo "[error] ERROR: scalafmt check failed, see differences above."
  echo "[error] To fix, format your sources using 'sbt scalafmtAll scalafmtSbt' before submitting a pull request."
  false
)

printMessage "VALIDATE JAVA CODE FORMATTING"
runSbt javafmt test:javafmt multi-jvm:javafmt
git diff --exit-code || (
  echo "[error] ERROR: javafmt check failed, see differences above."
  echo "[error] To fix, format your sources using sbt javafmt test:javafmt before submitting a pull request."
  false
)

# Only update Whitesource if WHITESOURCE_PASSWORD is defined
# Encrypted environment variables are not available to pull requests for security reasons
if [[ -n "${WHITESOURCE_PASSWORD}" ]]; then
  runSbtNoisy whitesourceUpdate
fi
