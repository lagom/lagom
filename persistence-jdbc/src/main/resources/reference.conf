play.modules.enabled += com.lightbend.lagom.javadsl.persistence.jdbc.JdbcPersistenceModule

lagom.persistence.jdbc {
  # Whether tables should be autocreated as needed
  autocreate-tables = true

  # Configuration for creating tables
  create-tables {
    # How long to wait for tables to be created, before failing
    timeout = 20s
    # The cluster role to create tables from
    run-on-role = ""
    # Exponential backoff for failures configuration for creating tables
    failure-exponential-backoff {
      # minimum (initial) duration until processor is started again
      # after failure
      min = 3s
      # the exponential back-off is capped to this duration
      max = 30s
      # additional random delay is based on this factor
      random-factor = 0.2
    }
  }
}

lagom.persistence.read-side.jdbc {

  tables {
    # Configuration for the offset table
    offset {
      # The name of the offset table
      tableName = "read_side_offsets"
      # The schema for the offset table
      schemaName = ""
      # The column names
      columnNames {
        # The name of the read side ID column
        readSideId = "read_side_id"
        # The name of the tag column
        tag = "tag"
        # The name of the sequence offset column
        sequenceOffset = "sequence_offset"
        # The name of the time based UUId offset column
        timeUuidOffset = "time_uuid_offset"
      }
    }
  }

  slick {
    driver = "slick.driver.H2Driver$"
    jndiName = "DefaultDS"
  }

}

jdbc-journal {
  event-adapters.aggregate-tagger = com.lightbend.lagom.internal.persistence.AggregateEventTagger
  event-adapter-bindings {
    "com.lightbend.lagom.javadsl.persistence.AggregateEvent" = aggregate-tagger
  }
}