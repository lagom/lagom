lagom.cluster {

  # Enables Akka Cluster Bootstrap.
  # https://doc.akka.io/docs/akka-management/current/bootstrap/
  #
  # This setting is only honored if `akka.cluster.seed-nodes` is not configured. So if you define
  # `akka.cluster.seed-nodes` Akka Cluster Bootstrap won't run.
  # In dev-mode this setting will be off.
  # When Cluster Bootstrap runs the Akka HTTP Management will also be started.
  bootstrap.enabled = on

  # Instruct the process to form an Akka cluster with itself. This setting is not recommended for production.
  # The cluster node will only join itself if akka.cluster.seed-nodes is not configured.
  # In dev-mode this setting will be on, otherwise the default is off.
  join-self = ${lagom.defaults.cluster.join-self}

  # Exit the JVM forcefully when the ActorSystem has been terminated.
  exit-jvm-when-system-terminated = on

}
lagom.defaults.cluster.join-self = off

# Cluster distribution settings
lagom.persistence.cluster.distribution {

  # Each entity is pinged at this interval. Each node will ping this often, so this interval can be quite long.
  ensure-active-interval = 30s
}


# Cluster messages serializers
akka.actor {
  serializers {
    lagom-cluster-core = "com.lightbend.lagom.internal.cluster.ClusterMessageSerializer"
  }
  serialization-bindings {
    "com.lightbend.lagom.internal.cluster.ClusterDistribution$EnsureActive" = lagom-cluster-core
  }
  serialization-identifiers {
    "com.lightbend.lagom.internal.cluster.ClusterMessageSerializer" = 1000006
  }
}

